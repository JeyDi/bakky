
version: "3.8"
services:
  redis:
      image: redis:7.4-bookworm
      container_name: redis
      restart: always
      env_file:
        - .env
      environment:
        - REDIS_REPLICATION_MODE=master
        - ALLOW_EMPTY_PASSWORD=no
      ports:
        - "${REDIS_PORT:-6379}:6379"
      deploy:
        resources:
          limits:
            cpus: "4"
            memory: 16G
          # reservations:
          #   cpus: "2"
          #   memory: 4G
      networks:
        - bakky

  # If you want to connect you have to use internal docker post and settings
  redis_insight:
    # redis db visualization dashboard
    image: redislabs/redisinsight:2.68.0
    container_name: redis_insight
    ports:
      - ${REDIS_INSIGHT_PORT:-6363}:8001
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8G
        # reservations:
        #   cpus: "1"
        #   memory: 2G
    depends_on:
      - redis
    networks:
      - bakky

  # Celery worker 1
  celery_worker:
    container_name: celery_worker
    build:
      dockerfile: ./Docker/python.dockerfile
      context: .
    env_file:
      - .env
    restart: always
    command: celery -A app.infrastructure.celery.manager worker --loglevel=info -n celery_worker_1 --concurrency 1 --prefetch-multiplier=1 -P prefork --max-tasks-per-child=1 -E -Q default, launch
    environment:
      LOG_VERBOSITY: ${LOG_VERBOSITY:-INFO}
      # Data configuration
      DB_HOST: ${DB_HOST:-localhost}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-bakky}
      DB_PASSWORD: ${DB_PASSWORD:-bakky2025}
      # Celery configuration
      CELERY_BROKER_URI: ${CELERY_BROKER_URI:-redis://redis:6379/0}
      CELERY_BACKEND_URI: ${CELERY_BACKEND_URI:-redis://redis:6379/0}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-bakky2025}
    deploy:
      resources:
          limits:
            cpus: "4"
            memory: 32G
          # reservations:
          #   cpus: "4"
          #   memory: 32G
    volumes:
      - ${LOG_PATH:-/data/project/bakky/logs/celery_worker_1}:/app/logs
    ports:
      # - "${CELERY_PORT:-5443}:5555"
      - 5555
    depends_on:
      - redis
    networks:
      - bakky

  mongodb:
    image: mongo:8.0.6
    container_name: mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=test_database
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - bakky
    command: ["--setParameter", "diagnosticDataCollectionEnabled=false"]

  mongo-express:
    image: mongo-express:1.0.2-18
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH=false
    depends_on:
      - mongodb
    networks:
      - bakky

